<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.scott.shares.mapper.SharesMapper">
  <resultMap id="BaseResultMap" type="com.scott.shares.entity.Shares">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="share_code" jdbcType="VARCHAR" property="shareCode" />
    <result column="share_name" jdbcType="VARCHAR" property="shareName" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="hide" jdbcType="BIT" property="hide" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, share_code, share_name, update_time, hide
  </sql>
  <select id="selectByExample" parameterType="com.scott.shares.entity.SharesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from shares
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit gt 0">
      limit #{limit}
    </if>
    <if test="offset gt 0">
      offset #{offset}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from shares
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from shares
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.scott.shares.entity.SharesExample">
    delete from shares
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.scott.shares.entity.Shares">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into shares (share_code, share_name, update_time, 
      hide)
    values (#{shareCode,jdbcType=VARCHAR}, #{shareName,jdbcType=VARCHAR}, #{updateTime,jdbcType=BIGINT}, 
      #{hide,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.scott.shares.entity.Shares">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into shares
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="shareCode != null">
        share_code,
      </if>
      <if test="shareName != null">
        share_name,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="hide != null">
        hide,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="shareCode != null">
        #{shareCode,jdbcType=VARCHAR},
      </if>
      <if test="shareName != null">
        #{shareName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="hide != null">
        #{hide,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.scott.shares.entity.SharesExample" resultType="java.lang.Integer">
    select count(*) from shares
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update shares
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.shareCode != null">
        share_code = #{record.shareCode,jdbcType=VARCHAR},
      </if>
      <if test="record.shareName != null">
        share_name = #{record.shareName,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.hide != null">
        hide = #{record.hide,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update shares
    set id = #{record.id,jdbcType=INTEGER},
      share_code = #{record.shareCode,jdbcType=VARCHAR},
      share_name = #{record.shareName,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      hide = #{record.hide,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.scott.shares.entity.Shares">
    update shares
    <set>
      <if test="shareCode != null">
        share_code = #{shareCode,jdbcType=VARCHAR},
      </if>
      <if test="shareName != null">
        share_name = #{shareName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="hide != null">
        hide = #{hide,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.scott.shares.entity.Shares">
    update shares
    set share_code = #{shareCode,jdbcType=VARCHAR},
      share_name = #{shareName,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=BIGINT},
      hide = #{hide,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>