<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.scott.shares.mapper.BuyMapper">
  <resultMap id="BaseResultMap" type="com.scott.shares.entity.Buy">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="share_code" jdbcType="VARCHAR" property="shareCode" />
    <result column="share_name" jdbcType="VARCHAR" property="shareName" />
    <result column="buy_price" jdbcType="DOUBLE" property="buyPrice" />
    <result column="buy_num" jdbcType="INTEGER" property="buyNum" />
    <result column="buy_time" jdbcType="BIGINT" property="buyTime" />
    <result column="sell_time" jdbcType="BIGINT" property="sellTime" />
    <result column="sell_price" jdbcType="DOUBLE" property="sellPrice" />
    <result column="profit" jdbcType="DOUBLE" property="profit" />
    <result column="trend" jdbcType="DOUBLE" property="trend" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, share_code, share_name, buy_price, buy_num, buy_time, sell_time, sell_price, 
    profit, trend
  </sql>
  <select id="selectByExample" parameterType="com.scott.shares.entity.BuyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from buy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit gt 0">
      limit #{limit}
    </if>
    <if test="offset gt 0">
      offset #{offset}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from buy
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from buy
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.scott.shares.entity.BuyExample">
    delete from buy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.scott.shares.entity.Buy">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into buy (share_code, share_name, buy_price, 
      buy_num, buy_time, sell_time, 
      sell_price, profit, trend
      )
    values (#{shareCode,jdbcType=VARCHAR}, #{shareName,jdbcType=VARCHAR}, #{buyPrice,jdbcType=DOUBLE}, 
      #{buyNum,jdbcType=INTEGER}, #{buyTime,jdbcType=BIGINT}, #{sellTime,jdbcType=BIGINT}, 
      #{sellPrice,jdbcType=DOUBLE}, #{profit,jdbcType=DOUBLE}, #{trend,jdbcType=DOUBLE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.scott.shares.entity.Buy">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into buy
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="shareCode != null">
        share_code,
      </if>
      <if test="shareName != null">
        share_name,
      </if>
      <if test="buyPrice != null">
        buy_price,
      </if>
      <if test="buyNum != null">
        buy_num,
      </if>
      <if test="buyTime != null">
        buy_time,
      </if>
      <if test="sellTime != null">
        sell_time,
      </if>
      <if test="sellPrice != null">
        sell_price,
      </if>
      <if test="profit != null">
        profit,
      </if>
      <if test="trend != null">
        trend,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="shareCode != null">
        #{shareCode,jdbcType=VARCHAR},
      </if>
      <if test="shareName != null">
        #{shareName,jdbcType=VARCHAR},
      </if>
      <if test="buyPrice != null">
        #{buyPrice,jdbcType=DOUBLE},
      </if>
      <if test="buyNum != null">
        #{buyNum,jdbcType=INTEGER},
      </if>
      <if test="buyTime != null">
        #{buyTime,jdbcType=BIGINT},
      </if>
      <if test="sellTime != null">
        #{sellTime,jdbcType=BIGINT},
      </if>
      <if test="sellPrice != null">
        #{sellPrice,jdbcType=DOUBLE},
      </if>
      <if test="profit != null">
        #{profit,jdbcType=DOUBLE},
      </if>
      <if test="trend != null">
        #{trend,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.scott.shares.entity.BuyExample" resultType="java.lang.Integer">
    select count(*) from buy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update buy
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.shareCode != null">
        share_code = #{record.shareCode,jdbcType=VARCHAR},
      </if>
      <if test="record.shareName != null">
        share_name = #{record.shareName,jdbcType=VARCHAR},
      </if>
      <if test="record.buyPrice != null">
        buy_price = #{record.buyPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.buyNum != null">
        buy_num = #{record.buyNum,jdbcType=INTEGER},
      </if>
      <if test="record.buyTime != null">
        buy_time = #{record.buyTime,jdbcType=BIGINT},
      </if>
      <if test="record.sellTime != null">
        sell_time = #{record.sellTime,jdbcType=BIGINT},
      </if>
      <if test="record.sellPrice != null">
        sell_price = #{record.sellPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.profit != null">
        profit = #{record.profit,jdbcType=DOUBLE},
      </if>
      <if test="record.trend != null">
        trend = #{record.trend,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update buy
    set id = #{record.id,jdbcType=INTEGER},
      share_code = #{record.shareCode,jdbcType=VARCHAR},
      share_name = #{record.shareName,jdbcType=VARCHAR},
      buy_price = #{record.buyPrice,jdbcType=DOUBLE},
      buy_num = #{record.buyNum,jdbcType=INTEGER},
      buy_time = #{record.buyTime,jdbcType=BIGINT},
      sell_time = #{record.sellTime,jdbcType=BIGINT},
      sell_price = #{record.sellPrice,jdbcType=DOUBLE},
      profit = #{record.profit,jdbcType=DOUBLE},
      trend = #{record.trend,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.scott.shares.entity.Buy">
    update buy
    <set>
      <if test="shareCode != null">
        share_code = #{shareCode,jdbcType=VARCHAR},
      </if>
      <if test="shareName != null">
        share_name = #{shareName,jdbcType=VARCHAR},
      </if>
      <if test="buyPrice != null">
        buy_price = #{buyPrice,jdbcType=DOUBLE},
      </if>
      <if test="buyNum != null">
        buy_num = #{buyNum,jdbcType=INTEGER},
      </if>
      <if test="buyTime != null">
        buy_time = #{buyTime,jdbcType=BIGINT},
      </if>
      <if test="sellTime != null">
        sell_time = #{sellTime,jdbcType=BIGINT},
      </if>
      <if test="sellPrice != null">
        sell_price = #{sellPrice,jdbcType=DOUBLE},
      </if>
      <if test="profit != null">
        profit = #{profit,jdbcType=DOUBLE},
      </if>
      <if test="trend != null">
        trend = #{trend,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.scott.shares.entity.Buy">
    update buy
    set share_code = #{shareCode,jdbcType=VARCHAR},
      share_name = #{shareName,jdbcType=VARCHAR},
      buy_price = #{buyPrice,jdbcType=DOUBLE},
      buy_num = #{buyNum,jdbcType=INTEGER},
      buy_time = #{buyTime,jdbcType=BIGINT},
      sell_time = #{sellTime,jdbcType=BIGINT},
      sell_price = #{sellPrice,jdbcType=DOUBLE},
      profit = #{profit,jdbcType=DOUBLE},
      trend = #{trend,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>